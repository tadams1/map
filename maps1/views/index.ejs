<html>
<title>Shorebird Conservation Map | BirdLife Australia</title>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBXm4Twg-7FTOODJX9YIm7futuz4lHTNxM&libraries=places"></script>   
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
        <link href='http://fonts.googleapis.com/css?family=Oleo+Script' rel='stylesheet' type='text/css'>
<link href="stylesheets/style.css" rel="stylesheet" type="text/css">

<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
<script type="text/javascript">

  var theMap;
  var theMarker;

  var pageInfo;
  var formattedAddr;
  var infowindow;
  var firstname;
  var lastname;
  var sbarea;
  var scount;
  var youremail;
  var current;


  function initialize() {

    var mapOptions = {
      zoom: 4,
      center: {lat: -28, lng: 137.883},
      mapTypeId: google.maps.MapTypeId.HYBRID,
      styles: [
        {
        featureType: "road",
        stylers: [
                 {visibility: "off"}
             ]
        }
      ],
      streetViewControl: false
    };

    theMap = new google.maps.Map(document.getElementById('map'), mapOptions);
    theMap.data.setStyle(function(feature) {
      return {icon:feature.getProperty('icon')};
    });

    pageInfo = <%- pageInfo %>;
    var view = <%- view %> ;
    var infowindow = new google.maps.InfoWindow();

    theMap.data.addListener('click', function(event) {
      if(event.feature == null) {
        infowindow.close();
        return;
      }  
      var d = new Date(event.feature.getProperty("datesaved"));
      var myHTML = "<div><b>" + event.feature.getProperty('type').charAt(0).toUpperCase() +  event.feature.getProperty('type').slice(1) +  " type: </b>" + event.feature.getProperty("typetext") + "<br>" + "<b>Dave saved: </b>" + d.getDate() + "-" + (d.getMonth()+1) + "-" + d.getFullYear()  + "<br>" + "<b>Details: </b>" + event.feature.getProperty("comment") + "<br>";

      if(event.feature.getProperty("link").length > 0) {
        myHTML += "<b>Link to futher details:</b>   <a href='" + event.feature.getProperty("link") + "' target='_blank'>" + event.feature.getProperty("link")  + "</a><br>";
      }

      myHTML += "<b>Logged by: </b>" + event.feature.getProperty("firstname") + " " + event.feature.getProperty("lastname").charAt(0).toUpperCase() + ".";
      if(event.feature.getProperty('filelink') != "NOFILE") {
      myHTML += "</div><div class=aspect-ratio aspect-ratio-1-1 img-frame'><img border='0' align='right' class='fit-img fit-img-tight' src='"+ event.feature.getProperty('filelink') + "'' /></div>"
      }
      infowindow.setContent("<div style='width:150px; text-align: left;'>" + myHTML + "</div>");
      infowindow.setPosition(event.latLng);
      infowindow.setOptions({pixelOffset: new google.maps.Size(0,-30)});
      infowindow.open(theMap);
    });

    firstname = localStorage.getItem('firstname');
    lastname = localStorage.getItem('lastname');
    youremail = localStorage.getItem('youremail');

    var input = document.getElementById('pac-input');

    var input1 = document.getElementById('pac-input1');
    var searchBox = new google.maps.places.SearchBox(input);

    theMap.controls[google.maps.ControlPosition.TOP_RIGHT].push(input1);
    theMap.controls[google.maps.ControlPosition.TOP_RIGHT].push(input);

    theMap.addListener('bounds_changed', function() {
      searchBox.setBounds(theMap.getBounds());
    });

    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }
      place = places[0];

            theMap.setCenter(place.geometry.location);
            theMap.setZoom(13);
           if(theMarker != null) {
             theMarker.setPosition(place.geometry.location);      
              lookupLocation();
            }

    });


    theMap.data.loadGeoJson(pageInfo.mapprefix + '/maps?type=ALL');
        //theMap.data.loadGeoJson('n');

        sbarea = new google.maps.FusionTablesLayer({

      map: theMap,
      heatmap: { enabled: false },
      query: {
        select: "col133",
        from: "1Ag1xo11BXDZZp_wgz4v17aprdjXazvAc_D9G-RzB",
        where: ""
      },
      options: {
        styleId: 2,
        templateId: 2
      }
    });
      /* scount = new google.maps.FusionTablesLayer({
          map: theMap,
          heatmap: { enabled: false },
          query: {
            select: "col117",
            from: "1m877intBkyS-gQyAOK0Saxxn3j6tI_kZngubB4mi",
            where: ""
          },
          options: {
            styleId: 2,
            templateId: 2
          }
        });*/


        theMap.addListener('dragend', function() {
          if(theMarker != null) {
           if(theMarker.getMap() == theMap) {
            theMarker.setPosition(theMap.getCenter());
          }
        }
      });

        theMap.addListener('zoom_changed', function() {
          if(theMarker != null) {
           if(theMarker.getMap() == theMap) {
            theMarker.setPosition(theMap.getCenter());
          }
        }
      });

        if(view =='threat' || view  == 'action') {  
          doViewThreats(view);
        } else {
          doViewRecords();
        }


      }


      function loadThreat(geotype) {
        removeAll();
        theMap.data.loadGeoJson(pageInfo.mapprefix + '/maps?type=ALLTYPE&types=' + geotype)

      }

      function buildPage(thename, thearray) {
        var tchk = $('#' + thename + 'typechk');

        var theList = $('<ul class="view-checkbox"></ul>');
        var sa = $('<li></li>');
        sa.append('<input type="checkbox" id="' + thename + 'selectall" checked /><label for="' + thename + 'selectall">Select All</label>');
        theList.append(sa);
        for(var i = 0; i < thearray.length; i++) {
          if(thearray[i].type == thename) {
            var theItem = $('<li></li>');
            var chkbox=$('<input/>').attr({
              type: "checkbox",
              title: thearray[i].title,
              id: thename + i,
              checked: true,
              value: thearray[i].id ,
              onclick: 'updateJSON(this,"' + thearray[i].id + '","' +  thearray[i].type + '")',
              class: thename + 'group'
            });

            var lbl=$("<label>").attr('for', thename + i).text(thearray[i].text)
            
            chkbox.appendTo(theItem);
            lbl.appendTo(theItem);
            
            if(!(typeof thearray[i].title === "undefined")) {
              var img = $('<img>').attr({
                class: "imgTest",
                src: "images/inf.png",
                textinfo: thearray[i].title
              });
              img.appendTo(lbl);
            }  




            theList.append(theItem);
          }
        }
        tchk.append(theList);      
      }

      function lookupLocation(){
        var request = new XMLHttpRequest();
        var method = 'GET';
        var url = 'http://maps.googleapis.com/maps/api/geocode/json?latlng='+theMarker.position.lat()+','+theMarker.position.lng()+'&sensor=true';
        var async = true;

        request.open(method, url, async);
        console.log("calling lookupLocation");
        request.onreadystatechange = function(){
          if(request.readyState == 4 && request.status == 200){
            var data = JSON.parse(request.responseText);
            var address = data.results[0];
            formattedAddr = address.formatted_address;
            $("label[id='location']").text('Location: ' + formattedAddr);
          }
        };
        request.send();
      }

      function saveLocation(savetype, theData) {
        firstname = $( '#' + savetype + 'firstname').val();
        lastname = $( '#' + savetype + 'lastname').val();
        youremail = $( '#' + savetype + 'emailaddr').val();

        localStorage.setItem('firstname', firstname);
        localStorage.setItem('lastname', lastname);
        localStorage.setItem('youremail', youremail);
        var cmt = $('textarea#' + savetype + 'comment').val();
     

        theData.append('type', savetype);
        theData.append('typeid', $('#select'+savetype + ' option:selected').val());
        theData.append('typetext', $('#select'+savetype + ' option:selected').text());
        theData.append('long', theMarker.position.lng());    
        theData.append('lat', theMarker.position.lat());
      
        $.ajax({
          type: 'POST',
          url: '/',
          contentType: 'multipart/form-data',
          data: theData,
            async: true,
            success: function (msg) {
                //alert(msg)
            },
            cache: false,
            contentType: false,
            processData: false
        });

        showOverlay(savetype);
      }


      function findMe(updatemarker) {
        if(current != 'R') {
          $("#imgoverlay").show();
        }

        if(navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            theMap.setCenter(pos);
            theMap.setZoom(13);
            if(updatemarker) {
              theMarker.setPosition(pos);      
              lookupLocation();
            }
            $("#imgoverlay").hide();
          }, function() {
            $("#imgoverlay").hide();
          });
        }
      }


      function buildSelector(theselector, thename, thearray) {
        for(var i = 0; i < thearray.length; i++) {
          if(thearray[i].type == thename) {
            theselector.append($('<option>', {
              value: thearray[i].id,
              text: thearray[i].text,
              title: thearray[i].title
            }));
          }
        } 
      }

      function buildOverlay(thename, thearray) {
        var sa = $('<ul></ul>').attr({
          class: 'overlay-ul'
        });
        for(var i = 0; i < thearray.length; i++) {
          if(thearray[i].type == thename && thearray[i].title != undefined) {            
            var theItem = $('<li></li>').attr({
              class: 'overlay-li'
            });
            theItem.append('<b>' + thearray[i].text + ": </b>" + thearray[i].title);
            theItem.appendTo(sa);

          }
        }
        $('#popupcontent').append(sa);
      }

      google.maps.event.addDomListener(window, 'load', initialize);

      function updateJSON(chkbox, dbtype, type2) {
        if(type2=='layer') {
          var v = eval(dbtype);

          if(chkbox.checked) {
            v.setMap(theMap);
          } else {
            v.setMap(null);
          }
        } else {
          if(chkbox.checked) {
            theMap.data.loadGeoJson(pageInfo.mapprefix + '/maps?type='+ dbtype);
          }else{
            var callback=function(feature) {

              if(feature.getProperty('typeid') == dbtype) {
                theMap.data.remove(feature);
              }
            };
            theMap.data.forEach(callback);
          }
        }
      }

      function addMarker() {
        if(theMarker == null) {
          theMarker = new google.maps.Marker({
            map: theMap,
            draggable: true,
            animation: google.maps.Animation.DROP,
            position: {lat: -28.327, lng: 137.067},
            icon: 'images/marker.png'
          });
        } else {
          theMarker.setMap(theMap);
        }
        theMarker.addListener('click', toggleBounce);
        theMarker.addListener('dragend',lookupLocation);
      }

      function toggleBounce() {
        if (theMarker.getAnimation() !== null) {
          theMarker.setAnimation(null);
        } else {
          theMarker.setAnimation(google.maps.Animation.BOUNCE);
        }
      }

      function removeAll() {
        var callback=function(feature) {
          theMap.data.remove(feature);
        };
        theMap.data.forEach(callback);
      }

      function removeByType(theType) {
        var callback=function(feature) {
          if(feature.getProperty('type')== theType || (theType=='layer' && feature.getGeometry().getType() == 'Polygon')) {
            theMap.data.remove(feature);
          }
        };
        theMap.data.forEach(callback);
      }

      function resetPane() {
        if($("#accordion").length) {
          $("#accordion").accordion("destroy");    // Removes the accordion bits
          $("#accordion").empty();
          $("#accordion").remove(); 
        }

        if($("#threatfrm").length) {
          $("#threatfrm").empty();
          $('#threatfrm').remove();
        }

        if($("#actionfrm").length) {
          $("#actionfrm").empty();
          $('#actionfrm').remove();
        }
      }

      function doViewRecords() {

        $('#records').addClass('active');
        $('#logthreat').removeClass('active'); 
        $('#logaction').removeClass('active');
        resetPane();

        if(theMarker != null) {
          theMarker.setMap(null);
        }

        var pos = {lat: -28, lng: 137.883};
        theMap.setCenter(pos);
        theMap.setZoom(4);

        var newdiv = $("<div id='accordion' class='accordion'><div>");
        newdiv.appendTo('#rightpane');

        $('#accordion').append('<div><h3>Actions<img src="images/actionmarker.png" /></h3><div id="actiontypechk"></div></div><div><h3>Threats <img src="images/threatmarker.png" /></h3><div id="threattypechk"></div></div><div><h3>Layers<img src="images/layers.png"></h3><div id="layertypechk"</div></div>');
        $( "#accordion" ).accordion({
          header: "> div > h3",
          collapsible: true,
          active: false,
          autoHeight: true,
          heightStyle: "content" 
        });

        buildPage('threat', pageInfo.types);
        buildPage('action', pageInfo.types);
        buildPage('layer', pageInfo.types);      
        $( "#accordion" ).accordion("option","active",0);


        
        $('#rightpane').append('<img id="imgoverlay" src="images/spin.gif" /><p>');
        $("#imgoverlay").hide();

        current = "R";
      

      }


      function showOverlay(savetype) {
        var overlaydiv = $('<div id="overlay" class="overlay1"><div>');
        var btnClose =$('<a></a>').attr({
          class: "boxclose",
          id: "boxclose"
        });
        overlaydiv.append(btnClose)

        overlaydiv.append("<h4>Thank you, your record has been saved!</h3><p>");

        overlaydiv.append("<hp>To register a conservation issue with BirdLife Australia directly, please <a href='http://goo.gl/forms/enO53Sihph'>complete this form </a>so we can gather a little more information. <p>");

        overlaydiv.append("<p><b>Help us spread the word about the plight of migratory shorebirds by sharing this map with your social networks:</b><p>");




        var networks = ['<a class="soc-twitter" href="https://twitter.com/home?status=I’ve+just+added+to+the+@BirdlifeOz+%23Shorebird+Conservation+Map!+Check+it+out+%26+show+your+%23love4shorebirds+today"></a>', 
        '<a class="soc-facebook" href="http://www.facebook.com/share.php?u=http://www.ecocene.com.au/map/about"></a>', 
        '<a class="soc-google" href="https://plus.google.com/share?url=http://www.ecocene.com.au/map/about"></a>'
        ];
        var soclist = $('<ul class="soc"></ul>');
        for(var n = 0; n < networks.length; ++n) {
          var sa = $('<li></li>');
          sa.append(networks[n]);
          soclist.append(sa);

        }
        overlaydiv.append(soclist);

        overlaydiv.append("<br><p>Or find out how else you can<a href='http://birdlife.org.au/campaigns/how-you-can-help'> take action to help Australia’s birds</a></p><p>");




        overlaydiv.appendTo(document.body)

        btnClose.click(function() {
          $("#overlay").empty();
          $('#overlay').remove();
          if(theMarker != null) {
            theMarker.setMap(null);
          }
          loadThreat(savetype);
        });
      }

      Date.prototype.toDateInputValue = (function() {
        var local = new Date(this);
        local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
        return local.toJSON().slice(0,10);
      });

      function doViewThreats(threattype) {

        current = "V";  
        $('#records').removeClass('active');
        $('#log' + threattype).addClass('active');
        if(threattype == 'action') {
          $('#logthreat').removeClass('active'); 
        } else {
          $('#logaction').removeClass('active');
        }
        addMarker();
        resetPane();
        loadThreat(threattype);

        var newdiv = $('<div id="' + threattype + 'pane" class=addthreat"></div');
        var theform = $('<form id="' + threattype +'frm"></form>');
        newdiv.appendTo(theform)
        theform.appendTo('#rightpane');

        newdiv.append('<h4>1. Find your location</h4><p>');

        newdiv.append('<img id="imgoverlay" src="images/spin.gif" /><p>');
        $("#imgoverlay").hide();


        var l =$('<label>/>').attr({
          id: "location",
        });
        

        l.text('Search using the box on the map or by dragging the marker. Zoom in and out with your mouse or the +/-  buttons on the map.');
        newdiv.append(l);


        newdiv.append("<h4>2. Enter " + threattype + " details</h4>");
        var l1 = $('<label>').attr('for', 'select' + threattype).text("Please select the " + threattype + " type:");
        var selector = $("<select id='select" + threattype + "' class=  ></select>");
        selector.appendTo(l1);

        buildSelector(selector, threattype, pageInfo.types);
        buildOverlay(threattype, pageInfo.types);
        newdiv.append(l1);


        var img = $('<img>').attr({
          class: "imgInfo",
          src: "images/inf.png"
        });
        img.appendTo(newdiv);
        newdiv.append(' ');
        var lnk = $('<a>').attr({
          href: '#popup2'
        }).text(threattype.charAt(0).toUpperCase() + threattype.slice(1) + ' types explained');
        lnk.appendTo(newdiv);
        newdiv.append('<br><br>');

        
        $('#rightpane').on('change', '#select' + threattype, function(){
        //$('#theImg').attr('textinfo', $('option:selected', this).attr('title'));
      });

        var l2 = $('<label>').attr('for', threattype + 'comment').text("Describe the " + threattype + " (<100 characters)");
        var ta = $('<textarea>').attr({
          name: "Description",
          id: threattype + 'comment',
          maxlength: 100,
          required: true,
          value: '',
          rows: 2,
          cols: 1
        });
        ta.appendTo(l2);
        newdiv.append(l2);

        var l3a = $('<label>').attr('for', threattype + 'date').text('Date ');
        var idate = $('<input>').attr({
          type: "date",
          name: "thedate",
          id: threattype + 'date',
          value: new Date().toDateInputValue()
        });
        idate.appendTo(l3a);
        newdiv.append(l3a);

        var l4 = $('<label>').attr('for', threattype + 'linkaddr').text('Link to further information (optional) ');
        var ilink = $('<input>').attr({
          type: "input",
          name: "linkddr",
          id: threattype + 'linkaddr'
        });
        ilink.appendTo(l4);
        newdiv.append(l4);

        var l5c = $('<label>').attr('for', threattype + 'lastname').text('Upload a photo (optional)');
        var inamelast = $("<input>").attr({
          id: threattype + 'filename',
          type: 'file',
          name: 'image',
        });
        inamelast.appendTo(l5c);
        newdiv.append(l5c);



        var str1 = firstname;
        if(firstname == null) {
          str1 = ""
        }

        var l5 = $('<label>').attr('for', threattype + 'firstname').text('First name ');
        var iname = $("<input>").attr({
          name: "firstname",
          id: threattype + 'firstname',
          required: true,
          value: str1
        });
        iname.appendTo(l5);
        newdiv.append(l5);


        var str1 = lastname;
        if(lastname == null) {
          str1 = ""
        }

        var l5a = $('<label>').attr('for', threattype + 'lastname').text('Last name ');
        var inamelast = $("<input>").attr({
          name: "lastname",
          id: threattype + 'lastname',
          required: true,
          value: str1
        });
        inamelast.appendTo(l5a);
        newdiv.append(l5a);

        var str2 = youremail;
        if(youremail == null) {
          str2 = ""
        }

        var l6 = $('<label>').attr('for', threattype + 'emailaddr').text('Your email ');
        var ename = $("<input>").attr({
          type: "email",
          name: "emailaddr",
          id: threattype + 'emailaddr',
          value: str2,
          required: true
        });
        ename.appendTo(l6);
        newdiv.append(l6);  

        
        newdiv.append("<br>"); 
        var b=$('<input/>').attr({
          type: "submit",
          id: "save",
          value: 'Save ' + threattype,
          class: 'btn btn-danger btn-md'
        });
        newdiv.append(b);
        newdiv.append("<br>"); 
        newdiv.append("<br>"); 

        var p1 = $('<p>').attr({
          class: 'small'
        }).text('Your last name and email address will not be published. We may use your email address to contact you for further details about your observation. ');

        var lnk = $('<a>').attr({
          href: '#popup1',
          class: 'linkstyle'
        }).text('Map disclaimer.');

        p1.append(lnk);
        newdiv.append(p1);        
      }

      $(document).on('submit','#actionfrm',function(){
        var formData = new FormData($(this)[0]);
        saveLocation('action', formData);
        return false;
      })

      $(document).on('submit','#threatfrm',function(){
        var formData = new FormData($(this)[0]);
        saveLocation('threat', formData);
        return false;
      })

      $(document).on('change','[id$="selectall"]' , function() {
        var theType = this.id.substring(0, this.id.length -9);
        removeByType(theType);
        $("." + theType + "group").prop('checked',false);
        if($(this).prop("checked")) {
          $("." + this.id.substring(0, this.id.length -9) + "group").trigger('click');
        }
      });

      $(function () {
        $( document ).tooltip({
          items: "img, [textinfo]",
          content: function() {
            var element = $( this );
            if ( element.is( "[textinfo]" ) ) {
          var text = element.attr( "textinfo" ); //element.text();
          return text;
        }
        if ( element.is( "[title]" ) ) {
          return element.attr( "title" );
        }

      }
    });
      });




    </script>


 <div id="header-container">
<div class="container-fluid">
        <div class="row">
        <div class="col-sm-1"><img src="images/birdlife-australia-logo.png" alt="BirdLife Australia"> </div>

  
    <div class="col-sm-5"><h1 id="title">Shorebird Conservation Map</h1> </div>

    <div class="col-sm-6">
          <nav>
         <ul class="nav nav-pills">
          <li role="presentation" id='records'><a href="/">Home</a></li>
          <li role="presentation" id='logaction'><a href="/?view=action">Register an action</a></li>
          <li role="presentation" id='logthreat'><a href="/?view=threat">Log a threat</a></li>
        </ul>
      </nav>
</div>
        </div>
      </div>
</div>

  <body>
    <div class="wrapper">
      <div class="inner-wrapper">
        <div class="center pane" id="map">
        </div>
        <div id="rightpane">
        </div>

        
      </div>

      <footer>

       <div id="footer-container-1">
        <div class="container-fluid">
          <div class="row">
            <div class="col-sm-8">
<p>Populations of some migratory shorebirds – such as the Eastern Curlew – have declined by up to 85%. However, strong local community action can help turn the tide to achieve conservation successes.</p>
<p><strong>Help us track shorebird conservation successes and challenges in your local areaby logging them on this map.
</strong></p>
</div>

          <div class="col-sm-4">
            <ul class="soc">
              <li>
                <a class="soc-twitter" href="https://twitter.com/BirdlifeOz"></a>
              </li>
              <li>
                <a class="soc-facebook" href="https://www.facebook.com/BirdLifeAustralia"></a>
              </li>
              <li>
                <a class="soc-google" href="https://plus.google.com/112350676933876368379/posts"></a>
              </li>
              <li>
                <a class="soc-youtube" href="https://www.youtube.com/channel/UCTKLS4Otm3PmpTBGv3nEC6A"></a>
              </li>
              <li>
                <a class="soc-instagram soc-icon-last" href="https://www.instagram.com/birdlifeoz/"></a>
              </li>
            </ul>
          </div>
        </div>
      </div>



<div id="footer-container-2">
        <div class="container-fluid">
          <div class="row">
            <div class="col-sm-6">
<h4>What you can do:</h4>
     Threats to shorebirds include industrial and residential developments, invasive species, pollution, and recreational disturbance. <b>If you have observed these threats please log them on our map</b>. This will help us identify sites requiring urgent conservation action.
      <br>
        <br>
    <a href="/?view=threat" class="btn btn-danger">Log a threat</a>
    <br>ack shorebird conservation successes and challenges in your local areaby logging them on this map.
</strong></p>
</div>

            <div class="col-sm-6">
<h4>What you can do:</h4>

 Threats to shorebirds include industrial and residential developments, invasive species, pollution, and recreational disturbance. <b>If you have observed these threats please log them on our map</b>. This will help us identify sites requiring urgent conservation action.
      <br>
        <br>
    <a href="/?view=threat" class="btn btn-danger">Log a threat</a>
    <br>
</div>

</div></div>



<div id="footer-container-3">
    <div class="container-fluid">
      <div class="row">
        <div class="col-sm-12">Shorebirds need your help. Act now to protect the species and places at risk. <a href="http://birdlife.org.au/campaigns/how-you-can-help" class="btn btn-default btn-sm">Get involved</a> or <a href="http://www.birdlife.org.au/current-appeal" class="btn btn-default btn-sm">Donate</a> 
        </div>
      </div>
    </div>
 </div>

<div id="footer-container-4">
 <div class="container-fluid">
<div class="row">
        <div class="col-sm-12">
<p><b>Disclaimer</b></p>
<p>The information and material hosted on the Shorebird Conservation Map is compiled by members of the public for the purposes of education and awareness of Australian Shorebirds. <a href="#popup1">Map disclaimer</a></p>
</div>
</div>
</div>
</div>


  
<div id="popup1" class="overlap">
  <div class="popup">
    <a class="close" href="#">×</a>
    <div class="content">
    <p><b>Map disclaimer</b></p>
<p>The information and material hosted on the Shorebird Conservation Map (“Map”) is compiled by members of the public for the purposes of education and awareness of Australian Shorebirds. BirdLife Australia takes no responsibility for, and provides no warranty as to the accuracy or reliability of the information contained in the Map or any external site to which a link has been made from the Map. While every effort is made to ensure that the information presented on the Map is up to date and correct, BirdLife Australia is unable to individually verify the information contained within and accepts no responsibility for any errors and omissions contained in the information, or if the information is not current. The material may include the views or recommendations of third parties and does not necessarily reflect the views of BirdLife Australia or indicate a commitment to a particular course of action. For further information, please see our  <a href=http://birdlife.org.au/site-disclaimer>full site disclaimer</a>. </p>
    </div>
  </div>
</div>


<div id="popup2" class="overlap">
  <div class="popup">
    <a class="close" href="#">×</a>
    <div  id="popupcontent" class="content1">
    </div>
  </div>
</div>

<input id="pac-input" class="searchbox" type="text" placeholder="Type here to search for a location">
<input id="pac-input1" class="btn btn-danger btn-md" type="button" value="Find me" onclick='findMe(true)'>


              <br>
            </div>
          </div>
        </div>


      </footer>


    </body>
    </html> 	